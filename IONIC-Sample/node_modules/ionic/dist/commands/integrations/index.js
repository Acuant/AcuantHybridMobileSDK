"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const namespace_1 = require("@ionic/cli-utils/lib/namespace");
class IntegrationsNamespace extends namespace_1.Namespace {
    constructor() {
        super(...arguments);
        this.name = 'integrations';
        this.description = 'Add or disable various integrations in your app';
        this.longDescription = `
Integrations, such as Cordova, can easily be enabled or disabled in your app with these commands.
`;
        this.commands = new namespace_1.CommandMap([
            ['enable', () => tslib_1.__awaiter(this, void 0, void 0, function* () { const { IntegrationsEnableCommand } = yield Promise.resolve().then(function () { return require('./enable'); }); return new IntegrationsEnableCommand(); })],
            ['disable', () => tslib_1.__awaiter(this, void 0, void 0, function* () { const { IntegrationsDisableCommand } = yield Promise.resolve().then(function () { return require('./disable'); }); return new IntegrationsDisableCommand(); })],
        ]);
    }
}
exports.IntegrationsNamespace = IntegrationsNamespace;
