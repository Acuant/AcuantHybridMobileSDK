{
  "_args": [
    [
      {
        "raw": "sdgc-cordova-native-dialogs",
        "scope": null,
        "escapedName": "sdgc-cordova-native-dialogs",
        "name": "sdgc-cordova-native-dialogs",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/tapasbehera/Desktop/Hybrid-GitHub/AcuantHybridMobileSDK/AcuantHybridSampleSDK/node_modules"
    ]
  ],
  "_from": "sdgc-cordova-native-dialogs@latest",
  "_id": "sdgc-cordova-native-dialogs@1.0.0",
  "_inCache": true,
  "_location": "/sdgc-cordova-native-dialogs",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/sdgc-cordova-native-dialogs-1.0.0.tgz_1480502608684_0.9254556428641081"
  },
  "_npmUser": {
    "name": "sdgc",
    "email": "MobilityAdmins@sdgc.com"
  },
  "_npmVersion": "1.4.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "sdgc-cordova-native-dialogs",
    "scope": null,
    "escapedName": "sdgc-cordova-native-dialogs",
    "name": "sdgc-cordova-native-dialogs",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/sdgc-cordova-native-dialogs/-/sdgc-cordova-native-dialogs-1.0.0.tgz",
  "_shasum": "91d1b8aa85812e3dd10e2bd023f067e1ade17a81",
  "_shrinkwrap": null,
  "_spec": "sdgc-cordova-native-dialogs",
  "_where": "/Users/tapasbehera/Desktop/Hybrid-GitHub/AcuantHybridMobileSDK/AcuantHybridSampleSDK/node_modules",
  "author": {
    "name": "Apache Software Foundation"
  },
  "bugs": {
    "url": "https://github.com/SdgcMobility/sdgc-cordova-native-dialogs/issues"
  },
  "dependencies": {},
  "description": "Cordova Plugin for Dialogs with Native UI",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "91d1b8aa85812e3dd10e2bd023f067e1ade17a81",
    "tarball": "https://registry.npmjs.org/sdgc-cordova-native-dialogs/-/sdgc-cordova-native-dialogs-1.0.0.tgz"
  },
  "homepage": "https://github.com/SdgcMobility/sdgc-cordova-native-dialogs#readme",
  "keywords": [
    "cordova-native-dialog",
    "native-dialogs",
    "native-ui",
    "cordova-ios",
    "cordova-android",
    "cordova-notification"
  ],
  "license": "Apache-2.0",
  "main": "index.js",
  "maintainers": [
    {
      "name": "sdgc",
      "email": "MobilityAdmins@sdgc.com"
    }
  ],
  "name": "sdgc-cordova-native-dialogs",
  "optionalDependencies": {},
  "readme": "<!--\r\n# license: Licensed to the Apache Software Foundation (ASF) under one\r\n#         or more contributor license agreements.  See the NOTICE file\r\n#         distributed with this work for additional information\r\n#         regarding copyright ownership.  The ASF licenses this file\r\n#         to you under the Apache License, Version 2.0 (the\r\n#         \"License\"); you may not use this file except in compliance\r\n#         with the License.  You may obtain a copy of the License at\r\n#\r\n#           http://www.apache.org/licenses/LICENSE-2.0\r\n#\r\n#         Unless required by applicable law or agreed to in writing,\r\n#         software distributed under the License is distributed on an\r\n#         \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n#         KIND, either express or implied.  See the License for the\r\n#         specific language governing permissions and limitations\r\n#         under the License.\r\n-->\r\n\r\n\r\n# cordova-plugin-dialogs\r\n\r\nFixed the issue in ios plugin where open dialogs got stuck. This is usefull as it now silently closes the open dialogs on app pause event.\r\n\r\nAlthough the object is attached to the global scoped `navigator`, it is not available until after the `deviceready` event.\r\n\r\n    document.addEventListener(\"deviceready\", onDeviceReady, false);\r\n    function onDeviceReady() {\r\n        console.log(navigator.notification);\r\n    }\r\n\r\n\r\n## Installation\r\n\r\n    cordova plugin add sdgc-cordova-native-dialogs\r\n\r\n\r\n## Methods\r\n\r\n- `navigator.notification.dismissAlertView`\r\n- `navigator.notification.alert`\r\n- `navigator.notification.confirm`\r\n- `navigator.notification.prompt`\r\n- `navigator.notification.beep`\r\n\r\n## navigator.notification.dismissAlertView\r\n\r\nThis function will close all/any opened alert/confirm/prompt box.\r\n\r\n    navigator.notification.dismissAlertView()\r\n\r\n\r\n### Example   \r\n\r\n    navigator.notification.dismissAlertView();\r\n\r\n### Supported Platforms\r\n\r\n- Android\r\n- iOS\r\n\r\n\r\n## navigator.notification.alert\r\n\r\nShows a custom alert or dialog box.  Most Cordova implementations use a native\r\ndialog box for this feature, but some platforms use the browser's `alert`\r\nfunction, which is typically less customizable.\r\n\r\n\r\n### Example\r\n\r\n    function alertDismissed() {\r\n        // do something\r\n    }\r\n\r\n    navigator.notification.alert(\r\n        'You are the winner!',  // message\r\n        alertDismissed,         // callback\r\n        'Game Over',            // title\r\n        'Done'                  // buttonName\r\n    );\r\n\r\n### Supported Platforms\r\n\r\n- iOS\r\n- Android\r\n\r\n\r\n\r\n## navigator.notification.confirm\r\n\r\nDisplays a customizable confirmation dialog box.\r\n\r\n\r\n### confirmCallback\r\n\r\nThe `confirmCallback` executes when the user presses one of the\r\nbuttons in the confirmation dialog box.\r\n\r\nThe callback takes the argument `buttonIndex` _(Number)_, which is the\r\nindex of the pressed button. Note that the index uses one-based\r\nindexing, so the value is `1`, `2`, `3`, etc.\r\n\r\n### Example\r\n\r\n    function onConfirm(buttonIndex) {\r\n        alert('You selected button ' + buttonIndex);\r\n    }\r\n\r\n    navigator.notification.confirm(\r\n        'You are the winner!', // message\r\n         onConfirm,            // callback to invoke with index of button pressed\r\n        'Game Over',           // title\r\n        ['Restart','Exit']     // buttonLabels\r\n    );\r\n\r\n### Supported Platforms\r\n\r\n- iOS\r\n- Android\r\n\r\n\r\n## navigator.notification.prompt\r\n\r\nDisplays a native dialog box that is more customizable than the browser's `prompt` function.\r\n\r\n\r\n### promptCallback\r\n\r\nThe `promptCallback` executes when the user presses one of the buttons\r\nin the prompt dialog box. The `results` object passed to the callback\r\ncontains the following properties:\r\n\r\n\r\n### Example\r\n\r\n    function onPrompt(results) {\r\n        alert(\"You selected button number \" + results.buttonIndex + \" and entered \" + results.input1);\r\n    }\r\n\r\n    navigator.notification.prompt(\r\n        'Please enter your name',  // message\r\n        onPrompt,                  // callback to invoke\r\n        'Registration',            // title\r\n        ['Ok','Exit'],             // buttonLabels\r\n        'Jane Doe'                 // defaultText\r\n    );\r\n\r\n### Supported Platforms\r\n\r\n- iOS\r\n- Android\r\n\r\n\r\n\r\n## navigator.notification.beep\r\n\r\nThe device plays a beep sound.\r\n\r\n    navigator.notification.beep(times);\r\n\r\n\r\n\r\n### Example\r\n\r\n    // Beep twice!\r\n    navigator.notification.beep(2);\r\n\r\n### Supported Platforms\r\n\r\n- iOS\r\n- Android\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/SdgcMobility/sdgc-cordova-native-dialogs.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.0.0"
}
